//Given an array arr[] of positive integers and an integer k, Your task is to return k largest elements in decreasing order. 

// Examples:

// Input: arr[] = [12, 5, 787, 1, 23], k = 2
// Output: [787, 23]
// Explanation: 1st largest element in the array is 787 and second largest is 23.

1.Approach one - Time efficient

import java.util.*;
class MyFile{
    static ArrayList <Integer> list(int arr[],int k)
    {
        ArrayList <Integer>listt=new ArrayList<>();
        int temp=0;

        Arrays.sort(arr);
        int n=arr.length-k;
        for(int j=n;j<arr.length;j++)
        {
            listt.add(arr[j]);
        }
        
        Collections.reverse(listt);
        return listt;
    }
    public static void main(String args[])
    {
        int arr[]={2,3,4,5,6,7,12,34,56,2,222,11,788,534,21,666};
        int target=4;
        System.out.println(list(arr,target));

    }
}

2. Approach- bubble sort

import java.util.*;
class MyFile{
    static ArrayList <Integer> list(int arr[],int n)
    {
        ArrayList <Integer>listt=new ArrayList<>();
        int temp=0;
        for(int j=0;j<arr.length-1;j++)
        {
            for(int i=0;i<arr.length-1;i++)
            {
                if(arr[i]<arr[i+1])
                {
                    temp=arr[i];
                    arr[i]=arr[i+1];
                    arr[i+1]=temp;
                }
            }
        }
        for(int j=0;j<n;j++)
        {
            listt.add(arr[j]);
        }
        return listt;
    }
    public static void main(String args[])
    {
        int arr[]={2,3,4,5,6,7,12,34,56};
        int target=4;
        System.out.println(list(arr,target));

    }
}
